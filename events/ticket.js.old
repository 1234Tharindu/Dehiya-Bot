const db = require("quick.db");
const { guildId, staffChat, ticketMsgId, ticketArea } = require("../config.json")

module.exports = {
    name: 'ready',
    once: false,
    async execute(client) {
        client.guilds.fetch(guildId).then((guild) => {
            // TICKET SYSTEM
            const tchannel = guild.channels.cache.get(db.get(`TicketChannel_${guildId}`));
            if (tchannel) {
                try {
                    tchannel.messages.fetch(`${ticketMsgId}`).then((sent) => {
                        sent.react("ðŸ“©");

                        const collector = sent.createReactionCollector(
                            (reaction, user) =>
                                guild.members.cache.find((member) => member.id === user.id),
                            {
                                dispose: true,
                            }
                        );
                        collector.on("collect", (reaction, user) => {
                            if (user.bot) return;
                            switch (reaction.emoji.name) {
                                case "ðŸ“©":
                                    contining(user);
                                    reaction.users.remove(user.id);
                                    break;
                            }
                        });
                        async function contining(user) {
                            let ticketId = await db.get(`TicketNumber_${guildId}`);
                            ticketId++;
                            let ticket_num = ("000" + ticketId).slice(-4);
                            await db.set(`TicketNumber_${guildId}`, ticketId);

                            const channel = await sent.guild.channels.create(`ticket - ${ticket_num}`,
                                {
                                    parent: ticketArea,
                                    type: "GUILD_TEXT",
                                    permissionOverwrites: [
                                        {
                                            id: guild.id,
                                            allow: [],
                                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL"],
                                        },
                                        {
                                            id: user.id,
                                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL"],
                                            deny: [],
                                        },
                                        {
                                            id: guild.roles.cache.find((r) => r.name === 'Staff'),
                                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL"],
                                            deny: [],
                                        },
                                    ],
                                }
                            );
                            guild.channels.cache.get(staffChat).send(`<@&1040356607533535313>, ${user} has created a new ticket ${channel}`)

                            const reactionEmbedBuilder = new EmbedBuilder()
                                .setColor("#FFF000")
                                .setDescription(
                                    "Support will be with you shortly.\n To close this ticket react with ðŸ”’"
                                )
                                .setFooter(`${client.user.username}`, client.user.avatarURL());
                            const reactionMessage = await channel.send(
                                `||${user}||`,
                                reactionEmbedBuilder
                            );
                            await db.set(`TicketReactionMessage_${guildId}`, reactionMessage.id);
                            await channel.messages.fetch(db.get(`TicketReactionMessage_${guildId}`)).then((reactionMessage) => {
                                reactionMessage.react("ðŸ”’");
                                reactionMessage.react("â›”");

                                const collector = reactionMessage.createReactionCollector(
                                    (reaction, user) =>
                                        guild.members.cache
                                            .find((member) => member.id === user.id)
                                            .permissions.has("ADMINISTRATOR") ||
                                        guild.members.cache
                                            .find((member) => member.id === user.id)
                                            .roles.cache.find((r) => r.name === 'Staff'),
                                    {
                                        dispose: true,
                                    }
                                );

                                collector.on("collect", (reaction, user) => {
                                    if (user.bot) return;
                                    switch (reaction.emoji.name) {
                                        case "ðŸ”’":
                                            if (
                                                guild.members.cache
                                                    .find((member) => member.id === user.id)
                                                    .permissions.has("ADMINISTRATOR") ||
                                                guild.members.cache
                                                    .find((member) => member.id === user.id)
                                                    .roles.cache.find((r) => r.name === 'Staff')
                                            ) {
                                                channel.edit({
                                                    permissionOverwrites: [
                                                        {
                                                            id: sent.guild.id,
                                                            allow: [],
                                                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL"],
                                                        },
                                                        {
                                                            id: sent.guild.roles.cache.find((r) => r.name === 'Staff'),
                                                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL"],
                                                            deny: [],
                                                        },
                                                    ],
                                                });
                                                channel.send("Channel Locked ðŸ”’");
                                                break;
                                            } else {
                                                user.send("Only Staff can lock the channels");
                                                reaction.users.remove(user.id);
                                                break;
                                            }
                                        case "â›”":
                                            if (
                                                guild.channels.cache.find(
                                                    (c) => c.name.toLowerCase() === channel.name
                                                )
                                            ) {
                                                if (
                                                    guild.members.cache
                                                        .find((member) => member.id === user.id)
                                                        .permissions.has("ADMINISTRATOR") ||
                                                    guild.members.cache
                                                        .find((member) => member.id === user.id)
                                                        .roles.cache.find((r) => r.name === 'Staff')
                                                ) {
                                                    setTimeout(() => channel.delete(), 5000);
                                                    channel.send("Deleting this channel in 5 seconds!");
                                                    return;
                                                } else {
                                                    user.send("Only Staff can delete the channels");
                                                    reaction.users.remove(user.id);
                                                    break;
                                                }
                                            }
                                            break;
                                    }
                                });
                            })
                        }

                    });
                } catch (e) {
                    console.log(e);
                }
            }
        })
    }
};